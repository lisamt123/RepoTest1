<apex:page standardController="DMAPP__Plan_Type__c" 
	extensions="DMAPP.AM_PlanTypeController"
	sidebar="false"
	>
    <apex:includeScript value="{! URLFOR($Resource.prefix) }" />
	<script type="text/javascript" src="{! $Resource.l10njs }"></script>
    <c:jQuery jQueryUI="true" 
    	underscore="true"/>

   
	<apex:include pageName="DMAPP__APIDelegate" />


	<apex:stylesheet value="{!URLFOR($Resource.DMAPP__JsonDiffPatch, 'JsonDiffPatch/css/jsondiffstyle.css')}" />
	<apex:stylesheet value="{!URLFOR($Resource.DMAPP__sobjectdiffvisualizercss)}" />

	<script type="text/javascript" src="{! URLFOR($Resource.JsonDiffPatch, 'JsonDiffPatch/js/jsondiffpatch.js') }"></script>
	<script type="text/javascript" src="{! URLFOR($Resource.sobjectdiffvisualizer) }"></script>
	<script type="text/javascript" src="{! URLFOR($Resource.diff_match_patch_uncompressed, 'diff_match_patch_uncompressed.js') }"></script>
	<script type="text/javascript" src="{! URLFOR($Resource.SObjectReportGenerator) }"></script>

 	<style>
		.errormessage {
		    color: red;
		}
 	</style>

<apex:form id="theForm">
	<apex:pageBlock title="Comparison Report for {!thePlanType.Name}" id="reportHeader">
		<apex:pageBlockSection title="Summary" columns="1" collapsible="true">
		   <apex:outputText value="Comparison File: {!nameFile}"/>
			<apex:outputText id="reportStatus"/>
			<span id="errormessage" class="errormessage"/>
	    </apex:pageBlockSection>			
		<apex:pageBlockButtons location="top" id="theButtonBlock">
			<apex:outputPanel id="datePanel" style="float:right;">
                <apex:outputLabel value="Show All Elements" for="showAllElements"  title="Display all Elements, including elements that haven't changed"/>
                <apex:inputCheckbox id="showAllElements" value="{!showAllElements}" onClick="toggleShowAllElements(this);" title="Display all elements, including elements that haven't changeds"/>
				<apex:outputLabel value="Show All Fields" for="showAllFields"  title="Display all fields, including values that haven't changed"/>
				<apex:inputCheckbox id="showAllFields" value="{!showAllFields}" onClick="toggleShowAllFields(this);" title="Display all fields, including values that haven't changeds">
   				</apex:inputCheckbox>
				<apex:outputLabel value="Sort By Update Version" for="sortBy"  title="Sort by the sort order of the update version of the Plan Type"/>
				<apex:inputCheckbox id="sortBy"  value="{!sortByUpdated}" onClick="toggleSortBy(this);" title="Sort by the sort order of the update version of the Plan Typ"/>
				<apex:commandButton value="Refresh" id="refreshBtn" action="{!refreshPage}"/>
			</apex:outputPanel>
        </apex:pageBlockButtons>
		<apex:pageBlockSection title="Plan Type Details" columns="1" collapsible="true">
		    <apex:facet name="body">
		    		<div id="PlanDetailsReportViewDiv" style="width: auto" class="jsondiffpatch-visualdiff-root"/>
		    </apex:facet>
        </apex:pageBlockSection>
		<apex:pageBlockSection title="AM Questions" columns="1" collapsible="true">
		    <apex:facet name="body">
		    		<div id="AMQuestionsReportViewDiv" style="width: auto" class="jsondiffpatch-visualdiff-root" />
		    </apex:facet>
        </apex:pageBlockSection>
		<apex:pageBlockSection title="AM Question Quicklinks" columns="1" collapsible="true">
		    <apex:facet name="body">
		    		<div id="AMQuestionQuicklinksReportViewDiv" style="width: auto" class="jsondiffpatch-visualdiff-root" />
		    </apex:facet>
        </apex:pageBlockSection>
		<apex:pageBlockSection title="Segmentation Questions" columns="1" collapsible="true">
		    <apex:facet name="body">
		    		<div id="SegQuestionsReportViewDiv" style="width: auto" class="jsondiffpatch-visualdiff-root" />
		    </apex:facet>
        </apex:pageBlockSection>
		<apex:pageBlockSection title="Segmentation Question Options" columns="1" collapsible="true">
		    <apex:facet name="body">
		    		<div id="SegQuestionOptionsReportViewDiv" style="width: auto" class="jsondiffpatch-visualdiff-root" />
		    </apex:facet>
        </apex:pageBlockSection>	
   	</apex:pageBlock>

	    <apex:actionFunction action="{!redirectToDetailPage}" name="redirectToDetailPageAction" rerender="theForm">
        	<apex:param name="firstParam" assignTo="{!redirectId}" value="" />
    	</apex:actionFunction>

	<div id='debug'  style="display: none">
		<div class="jsontext">
			<div>
				<label for="json1"> This </label>
				<textarea id="json1" class="json-input"></textarea>
				<span id="json1errormessage" class="jsonerrormessage"></span>
			</div>
			<div>
				<label for="json2"> That </label> 
				<textarea id="json2" class="json-input"></textarea>
				 <span id="json2errormessage" class="2sonerrormessage"></span>
			</div>
		</div>
		<div class="jsontext">
			<div>
				<label for="jsonDiff"> Diff </label>
				<textarea id="jsonDiff" class="json-input"></textarea>
			</div>
		</div>
	</div>
</apex:form>

	<script>
		var ttg = ttg || {};
        var showAllElements;
        var showAllFields;
        var sortByUpdated;

		ttg.PlanTypeReportGenerator = function(spec) {
		    var that = {};
		    that.spec = spec;
		    
		    var id = spec.id;
			var type = spec.type;
			var label = spec.label;
			var comparisionJSON = spec.comparisionJSON;
			var sortByUpdated = spec.sortByUpdated;
			var showAllFields = spec.showAllFields;
			var showAllElements = spec.showAllElements;
			var controllerName = spec.controllerName;

			function getReportElements() {
				var elements = {
					details : {  
                        objectType: '{!theObjectType}',
                        name: 'details', 
                        sortFieldName: 'Name',
                        fieldBlackList: [],
                        tableName : 'Details',
                        divName : '#PlanDetailsReportViewDiv',
                        importantFields : ['Name'],
                        reportType : 'SingleObject',
                        debug : false
                    },
                   amQuestionDetails : {
                        objectType: 'DMAPP__AM_Question__c',
                        name: 'amQuestionDetails',
                        sortFieldName: 'DMAPP__Order_Number__c',
                        fieldBlackList: [],
                        divName : '#AMQuestionsReportViewDiv',
                        importantFields : ['DMAPP__Question_Text__c', 'DMAPP__Order_Number__c'],
                        parentRefField : 'DMAPP__Plan_Type__c',
                        debug : true
                    },
                    amQuestionQuicklinks : {
                        objectType : 'DMAPP__DM_Plan_Question_Quicklink__c',
                        name : 'amQuestionQuicklinks',
                        sortFieldName: 'DMAPP__SortOrder__c',
                        fieldBlackList : [],
                        divName : '#AMQuestionQuicklinksReportViewDiv',
                        importantFields : [],
                        parentElement : 'amQuestionDetails',
                        parentRefField : 'DMAPP__AM_Question__c',
                        debug : false
                    },
                    segmentationQuestions : {
                        objectType: 'DMAPP__DM_Segmentation_Question__c',
                        name: 'segmentationQuestions',
                        sortFieldName: 'DMAPP__SortOrder__c',
                        fieldBlackList: [],
                        divName : '#SegQuestionsReportViewDiv',
                        importantFields : [],
                        parentRefField : 'DMAPP__Plan_Type__c',
                        debug : false
                    },
                    segmentationQuestionOptions : {
                        objectType: 'DMAPP__DM_Segmentation_Question_Option__c',
                        name: 'segmentationQuestionOptions',
                        sortFieldName: 'DMAPP__SortOrder__c',
                        fieldBlackList: [],
                        divName : '#SegQuestionOptionsReportViewDiv',
                        importantFields : [],
                        parentElement : 'segmentationQuestions',
                        parentRefField : 'DMAPP__Segmentation_Question__c',
                        debug : false
                    }
                };
				return elements;
			}
		    
			that.getReportElements = getReportElements;
			return that;
		};

        jsondiffpatch.config.objectHash = function(obj) {
            var hash = obj[ttg.vfp + 'DealmakerID__c'] || obj[ttg.vfp + 'DealmakerId__c'] || obj.Id || JSON.stringify(obj);
            // console.log('==================>objectHash(): hash = ' + hash);
            return hash;
        };

        function toggleShowAllElements(toggle){
            showAllElements = toggle.checked;
          console.log('================> toggleShowAllElements(): showAllElements = ' + showAllElements);
			jQuery('.jsondiffpatch-object-table-unchanged').each(function(){
					jQuery(this).css('display', ((toggle.checked) ? 'table-row' : 'none' ));
			});
			jQuery('.jsondiffpatch-item-row-unchanged').each(function(){
					jQuery(this).css('display', ((toggle.checked) ? 'table-row' : 'none' ));
			});
        };

		function toggleShowAllFields(toggle){
			showAllFields = toggle.checked;
        	jQuery('.jsondiffpatch-unchanged').each(function(){
       				 	jQuery(this).css('display', ((toggle.checked) ? 'table-row' : 'none' ));
    				});
        };

         function toggleSortBy(toggle){
            sortByUpdated = toggle.checked;
            var spec = {
                type: "{!theObjectType}",
                label: "{!$ObjectType[theObjectType].Label}",
				id: '{!thePlanType.Id}',
                controllerName : 'AM_PlanTypeController',
                sortByUpdated : toggle.checked,
                showAllElements : showAllElements,
                showAllFields : showAllFields,
                comparisionJSON : '{!JSENCODE(comparisionJSON)}',
            };
          	spec.objectReportGenerator = ttg.PlanTypeReportGenerator(spec); 
            ttg.SObjectReportGenerator(spec).generate(); 

        };

		jQuery(document).ready(function() {
            var showAllElements = {!showAllElements};
            var showAllFields = {!showAllFields};
            var sortByUpdated = {!sortByUpdated};
            var spec = {
                    type: "{!theObjectType}",
                    label: "{!$ObjectType[theObjectType].Label}",
					id: '{!thePlanType.Id}',
	                controllerName : 'AM_PlanTypeController',
	                sortByUpdated : {!sortByUpdated},
	                showAllElements : {!showAllElements},
	                showAllFields : {!showAllFields},
	                comparisionJSON : '{!JSENCODE(comparisionJSON)}'
	            };
            spec.objectReportGenerator = ttg.PlanTypeReportGenerator(spec); 
            ttg.SObjectReportGenerator(spec).generate(); 
        });        
		
		function refreshPage() {
			location.reload();
		}
		
   </script>
</apex:page>