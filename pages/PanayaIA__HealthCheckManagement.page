<apex:page title="Panaya Automatic Notification Management" sidebar="false" tabStyle="Panaya_Impact_Analysis__tab" controller="PanayaIA.HealthCheckManagement" action="{!init}">
<!--     <script src="//ajax.googleapis.com/ajax/libs/jquery/1.8.1/jquery.min.js"></script> -->
	<script type="text/javascript" src="{!URLFOR($Resource.Panaya,'js/jquery.min.js')}"></script>

    <script type="text/javascript">
        var j$=jQuery.noConflict();
        j$(document).ready(function(){
            //Update the checkboxes according to the server
            j$("#unitTestsEnabled").prop('checked', {!hcp.runUnitTests});
            j$("#unitTestsFix").prop('checked', {!hcp.runUnitTestsOnManagedPackage});
            if (j$("#unitTestsEnabled").prop('checked')){
                j$("#hoursLabel").css("opacity",1);
                j$("#hoursLabel").css("visibility","visible");
                var listObj=document.getElementById("{!$Component.theForm.parametersBlock.hoursList}");
                j$(listObj).fadeTo("opacity",1);
                j$(listObj).css("visibility","visible");
            }
            
        });
        function updateUnitTestsEnabled(){
            if (j$("#unitTestsEnabled").prop('checked')){
                var listObj=document.getElementById("{!$Component.theForm.parametersBlock.hoursList}");
                j$("#hoursLabel").css("visibility","visible");
                j$("#hoursLabel").fadeTo(600,1);
                j$(listObj).css('visibility','visible');
                j$(listObj).fadeTo(600,1);
            }
            else{
                var listObj=document.getElementById("{!$Component.theForm.parametersBlock.hoursList}");
                j$("#hoursLabel").fadeTo(300,0,function(){ 
                    j$(this).css('visibility', 'hidden');
                });
                j$(listObj).fadeTo(300,0,function(){ 
                    j$(this).css('visibility', 'hidden');
                });
            }
            var unitTestsCheckbox=document.getElementById("{!$Component.theForm.parametersBlock.unitTestsCheck}");
            j$(unitTestsCheckbox).click();
        }
        function updateFixNotifications(){
            var UnitTestsOnManagedPackageCheckbox=document.getElementById("{!$Component.theForm.parametersBlock.UnitTestsOnManagedPackageCheck}");
            j$(UnitTestsOnManagedPackageCheckbox).click();
        }
        function subscribeChange(str){
            if (j$("#"+str+"Subscribe").prop('checked')){
                j$("#"+str+"PushFrequency").children().first().css("visibility","visible");
                j$("#"+str+"PushLabel").css("visibility","visible");
                j$("#"+str+"PushFrequency").children().first().fadeTo(600,1);
                j$("#"+str+"PushLabel").fadeTo(600,1);
            }
            else{
                j$("#"+str+"PushFrequency").children().first().fadeTo(300,0,function(){ 
                    j$(this).css('visibility', 'hidden');
                });
                j$("#"+str+"PushLabel").fadeTo(300,0,function(){ 
                    j$(this).css('visibility', 'hidden');
                });
            }
        }
    </script>
    <STYLE type="text/css">
        .onoffswitch {
            position: relative; width: 70px;
            -webkit-user-select:none; -moz-user-select:none; -ms-user-select: none;
        }
        .onoffswitch-checkbox {
            display: none;
        }
        .onoffswitch-label {
            display: block; overflow: hidden; cursor: pointer;
            border: 2px solid #D4D4D4; border-radius: 20px;
        }
        .onoffswitch-inner {
            width: 200%; margin-left: -100%;
            -moz-transition: margin 0.3s ease-in 0s; -webkit-transition: margin 0.3s ease-in 0s;
            -o-transition: margin 0.3s ease-in 0s; transition: margin 0.3s ease-in 0s;
        }
        .onoffswitch-inner:before, .onoffswitch-inner:after {
            float: left; width: 50%; height: 20px; padding: 0; line-height: 20px;
            font-size: 14px; color: white; font-family: Trebuchet, Arial, sans-serif; font-weight: bold;
            -moz-box-sizing: border-box; -webkit-box-sizing: border-box; box-sizing: border-box;
            border-radius: 20px;
            box-shadow: 0px 10px 0px rgba(0,0,0,0.08) inset;
        }
        .onoffswitch-inner:before {
            content: "ON";
            padding-left: 14px;
            background-color: #6BB2ED; color: #FFFFFF;
            border-radius: 20px 0 0 20px;
        }
        .onoffswitch-inner:after {
            content: "OFF";
            padding-right: 14px;
            background-color: #FFFFFF; color: #666666;
            text-align: right;
            border-radius: 0 20px 20px 0;
        }
        .onoffswitch-switch {
            width: 20px; margin: 0px;
            background: #FFFFFF;
            border: 2px solid #D4D4D4; border-radius: 20px;
            position: absolute; top: 0; bottom: 0; right: 46px;
            -moz-transition: all 0.3s ease-in 0s; -webkit-transition: all 0.3s ease-in 0s;
            -o-transition: all 0.3s ease-in 0s; transition: all 0.3s ease-in 0s; 
            background-image: -moz-linear-gradient(center top, rgba(0,0,0,0.1) 0%, rgba(0,0,0,0) 80%); 
            background-image: -webkit-linear-gradient(center top, rgba(0,0,0,0.1) 0%, rgba(0,0,0,0) 80%); 
            background-image: -o-linear-gradient(center top, rgba(0,0,0,0.1) 0%, rgba(0,0,0,0) 80%); 
            background-image: linear-gradient(center top, rgba(0,0,0,0.1) 0%, rgba(0,0,0,0) 80%);
            box-shadow: 0 1px 1px white inset;
        }
        .onoffswitch-checkbox:checked + .onoffswitch-label .onoffswitch-inner {
            margin-left: 0;
        }
        .onoffswitch-checkbox:checked + .onoffswitch-label .onoffswitch-switch {
            right: 0px; 
        }
        
        /* ROUNDED ONE */
        .roundedOne {
            width: 28px;
            height: 28px;
            background: #fcfff4;
        
            background: -webkit-linear-gradient(top, #fcfff4 0%, #dfe5d7 40%, #1D2F3E 100%);
            background: -moz-linear-gradient(top, #fcfff4 0%, #dfe5d7 40%, #1D2F3E 100%);
            background: -o-linear-gradient(top, #fcfff4 0%, #dfe5d7 40%, #1D2F3E 100%);
            background: -ms-linear-gradient(top, #fcfff4 0%, #dfe5d7 40%, #1D2F3E 100%);
            background: linear-gradient(top, #fcfff4 0%, #dfe5d7 40%, #1D2F3E 100%);
            filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#fcfff4', endColorstr='#1D2F3E',GradientType=0 );
        
            -webkit-border-radius: 50px;
            -moz-border-radius: 50px;
            border-radius: 50px;
        
            -webkit-box-shadow: inset 0px 1px 1px white, 0px 1px 3px rgba(0,0,0,0.5);
            -moz-box-shadow: inset 0px 1px 1px white, 0px 1px 3px rgba(0,0,0,0.5);
            box-shadow: inset 0px 1px 1px white, 0px 1px 3px rgba(0,0,0,0.5);
            position: relative;
        }
        
        .roundedOne label {
            cursor: pointer;
            position: absolute;
            width: 20px;
            height: 20px;
        
            -webkit-border-radius: 50px;
            -moz-border-radius: 50px;
            border-radius: 50px;
            left: 4px;
            top: 4px;
        
            -webkit-box-shadow: inset 0px 1px 1px rgba(0,0,0,0.5), 0px 1px 0px rgba(255,255,255,1);
            -moz-box-shadow: inset 0px 1px 1px rgba(0,0,0,0.5), 0px 1px 0px rgba(255,255,255,1);
            box-shadow: inset 0px 1px 1px rgba(0,0,0,0.5), 0px 1px 0px rgba(255,255,255,1);
        
            background: -webkit-linear-gradient(top, #222 0%, #D4D4D4 100%);
            background: -moz-linear-gradient(top, #222 0%, #D4D4D4 100%);
            background: -o-linear-gradient(top, #222 0%, #D4D4D4 100%);
            background: -ms-linear-gradient(top, #222 0%, #D4D4D4 100%);
            background: linear-gradient(top, #222 0%, #D4D4D4 100%);
            filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#222', endColorstr='#D4D4D4',GradientType=0 );
        }
        
        .roundedOne label:after {
            -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=0)";
            filter: alpha(opacity=0);
            opacity: 0;
            content: '';
            position: absolute;
            width: 16px;
            height: 16px;
            background: #6BB2ED;
        
            background: -webkit-linear-gradient(top, #6BB2ED 0%, #2C96EE 100%);
            background: -moz-linear-gradient(top, #6BB2ED 0%, #2C96EE 100%);
            background: -o-linear-gradient(top, #6BB2ED 0%, #2C96EE 100%);
            background: -ms-linear-gradient(top, #6BB2ED 0%, #2C96EE 100%);
            background: linear-gradient(top, #6BB2ED 0%, #2C96EE 100%);
        
            -webkit-border-radius: 50px;
            -moz-border-radius: 50px;
            border-radius: 50px;
            top: 2px;
            left: 2px;
        
            -webkit-box-shadow: inset 0px 1px 1px white, 0px 1px 3px rgba(0,0,0,0.5);
            -moz-box-shadow: inset 0px 1px 1px white, 0px 1px 3px rgba(0,0,0,0.5);
            box-shadow: inset 0px 1px 1px white, 0px 1px 3px rgba(0,0,0,0.5);
        }
        
        .roundedOne label:hover::after {
            -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=30)";
            filter: alpha(opacity=30);
            opacity: 0.3;
        }
        
        .roundedOne input[type=checkbox]:checked + label:after {
            -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=100)";
            filter: alpha(opacity=100);
            opacity: 1;
        }
        
        /* General Components*/
        span.lineFont{
            font-size: 120%;
            font-family: Trebuchet, Arial, sans-serif;
            font-weight: bold;
            color: #666666;
        }
        span.headerFont{
            font-size: 140%;
            font-family: Trebuchet, Arial, sans-serif;
            font-weight: bold;
        }
        td.firstColumn{
            width: 250px; vertical-align: middle;
        }
        td.secondColumn{
            width: 150px; vertical-align: middle;
        }
        td.thirdColumn{
            width: 120px; vertical-align: middle;
        }
        td.fourthColumn{
            vertical-align: middle;
        }
        .roundList{
            border-radius: 4px;
            border: solid 1px DarkGray;
            font-family: Trebuchet, Arial, sans-serif;
        }
    </STYLE>
    <apex:form id="theForm">
        <apex:pageblock title="Panaya Automatic Notification Management" id="mainSection">
            <a href="/apex/ImpactAnalysis">Main</a>
        </apex:pageblock>
        <div style="width: 680px;">
            <apex:pageBlock id="parametersBlock">
                <apex:inputcheckbox value="{!hcp.runUnitTests}" id="unitTestsCheck" style="display: none;">
                    <apex:actionSupport event="onchange" action="{!updateParameters}" reRender="debugBlock"/>
                </apex:inputcheckbox>
                <apex:inputcheckbox value="{!hcp.runUnitTestsOnManagedPackage}" id="UnitTestsOnManagedPackageCheck" style="display: none;">
                    <apex:actionSupport event="onchange" action="{!updateParameters}" reRender="debugBlock"/>
                </apex:inputcheckbox>
                <span class="headerFont">Test Class Automatic Execution</span>
                <br/><br/>
                <table style="width: 100%; border-spacing: 5px;">
                    <tr>
                        <td class="firstColumn">
                            <span class="lineFont">Run Test Classes</span>
                        </td>
                        <td class="secondColumn">
                            <div class="onoffswitch" style="margin-left:auto;margin-right:auto;">
                                <input type="checkbox" name="onoffswitch" class="onoffswitch-checkbox" id="unitTestsEnabled" onchange="javascript: updateUnitTestsEnabled();"/>
                                <label class="onoffswitch-label" for="unitTestsEnabled">
                                    <div class="onoffswitch-inner"></div>
                                    <div class="onoffswitch-switch"></div>
                                </label>
                            </div>
                        </td>
                        <td class="thirdColumn">
                            <span class="lineFont" style="visibility: hidden; opacity: 0;" id="hoursLabel">Execution Time</span>
                        </td>
                        <td class="fourthColumn">
                            <apex:selectList value="{!hcp.unitTestsHour}" styleClass="roundList" style="width: 80px; visibility: hidden; opacity: 0;" size="1" id="hoursList">
                                <apex:actionSupport event="onchange" action="{!updateParameters}" reRender="debugBlock"/>
                                <apex:selectOptions value="{!hours}"/>
                            </apex:selectList>
                        </td>
                    </tr>
                    <tr>
                        <td class="firstColumn">
                            <span class="lineFont">Run Tests on Managed Packages</span>
                        </td>
                        <td class="secondColumn">
                            <div class="onoffswitch" style="margin-left:auto;margin-right:auto;">
                                <input type="checkbox" name="onoffswitch" class="onoffswitch-checkbox" id="unitTestsFix" onchange="javascript: updateFixNotifications();"/>
                                <label class="onoffswitch-label" for="unitTestsFix">
                                    <div class="onoffswitch-inner"></div>
                                    <div class="onoffswitch-switch"></div>
                                </label>
                            </div>
                        </td>
                        <td class="thirdColumn">&nbsp;
                        </td>
                        <td class="fourthColumn">&nbsp;
                        </td>
                    </tr>
                </table>
            </apex:pageBlock>  
            <apex:pageblock id="subscribeBlock" rendered="false">
                <span class="headerFont">Subscribe for Change Notification</span>
                <br/><br/>
                <table style="width: 100%; border-spacing: 5px;">
                    <apex:repeat value="{!subscribeComponents}" var="subComp">
                        <tr>
                            <td class="firstColumn">
                                <span class="lineFont">{!subComp.parameterLabel}</span>
                            </td>
                            <td class="secondColumn">
                                <!--
                                <div class="roundedOne" style="float: left;">
                                    <input type="checkbox" value="None" style="visibility: hidden;" class="roundedOne" id="{!subComp.parameterName}Subscribe" name="check" />
                                    <label for="{!subComp.parameterName}Subscribe"></label>
                                </div>-->
                                <div class="onoffswitch" style="margin-left:auto;margin-right:auto;">
                                    <input type="checkbox" name="onoffswitch" class="onoffswitch-checkbox" onchange="javascript: subscribeChange('{!subComp.parameterName}')" id="{!subComp.parameterName}Subscribe"/>
                                    <label class="onoffswitch-label" for="{!subComp.parameterName}Subscribe">
                                        <div class="onoffswitch-inner"></div>
                                        <div class="onoffswitch-switch"></div>
                                    </label>
                                </div>
                            </td>
                            <td class="thirdColumn" style="width: 80px;">
                                <span class="lineFont" style="visibility: hidden; opacity: 0;" id="{!subComp.parameterName}PushLabel">Push</span>
                            </td>
                            <td class="fourthColumn" id="{!subComp.parameterName}PushFrequency">
                                <apex:selectList value="{!subComp.pushFrequency}" styleClass="roundList" style="width: 110px; visibility: hidden; opacity: 0; font-size: 120%;" size="1">
                                    <!--<apex:actionSupport event="onchange" action="{!updateParameters}" reRender="debugBlock"/>-->
                                    <apex:selectOptions value="{!frequencies}"/>
                                </apex:selectList>
                            </td>
                        </tr>
                    </apex:repeat>
                </table>
            </apex:pageblock>                     
        </div>
    </apex:form>
</apex:page>